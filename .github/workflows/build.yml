name: Build Projects

on:
  workflow_dispatch:
jobs:
  buildall:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    name: Build (matrix)
    needs: build
    steps:
      - name: Check build matrix status
        if: ${{ needs.build.result != 'success' }}
        run: exit 1
  build:
    name: Building ${{ matrix.project.name }} with pnpm ${{ matrix.pnpm-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pnpm-version: [8]
        project:
          - { name: Example, id: example, path: apps/example }
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: ${{ matrix.pnpm-version }}
          run_install: |
            - recursive: true
              args: [--lockfile=false, --frozen-lockfile=false, --no-frozen-lockfile, --strict-peer-dependencies=false]

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Build Project
        run: |
          cd ${{ matrix.project.path }}
          pnpm run build
